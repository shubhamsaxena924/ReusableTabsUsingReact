{"version":3,"sources":["components/Tab.tsx","components/Carousel.tsx","components/TabContent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tab","props","children","Carousel","title","forEach","c","type","Error","useState","selectedIndex","setSelectedIndex","tabWidth","length","className","map","child","index","onClick","style","width","left","as","Fragment","unmount","show","enter","enterFrom","enterTo","entered","leave","leaveFrom","leaveTo","TabContent","src","image","alt","desc","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"iNAWeA,EAJc,SAACC,GAC5B,OAAO,mCAAGA,EAAMC,YC6DHC,EA5DmB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOF,EAAe,EAAfA,SAC1CA,EAASG,SAAQ,SAACC,GAChB,GAAIA,EAAEC,OAASP,EACb,MAAM,IAAIQ,MAAM,+CAAiDF,EAAEC,SAIvE,MAA0CE,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,IAAMV,EAASW,OAEhC,OACE,gCACE,sBAAKC,UAAU,uBAAf,UACE,oBAAIA,UAAU,oEAAd,SACGV,IAEH,sBAAKU,UAAU,wCAAf,UACE,qBAAKA,UAAU,oBAAf,SACGZ,EAASa,KAAI,SAACC,EAAOC,GAAR,OACZ,wBACEH,UAAU,qDACVI,QAAS,kBAAMP,EAAiBM,IAFlC,SAIGD,EAAMf,MAAMG,aAInB,qBACEU,UAAU,iEACVK,MAAO,CACLC,MAAOR,EAAW,IAClBS,KAAMT,EAAWF,EAAgB,aAMzC,qBAAKI,UAAU,WAAf,SACGZ,EAASa,KAAI,SAACC,EAAOC,GAAR,OACZ,cAAC,IAAD,CACEK,GAAIC,WACJC,SAAS,EACTC,KAAMR,IAAUP,EAChBgB,MAAM,kCACNC,UAAU,YACVC,QAAQ,cACRC,QAAQ,cACRC,MAAM,kCACNC,UAAU,cACVC,QAAQ,YAVV,SAYE,8BAAMhB,eClCHiB,EAlBqB,SAAChC,GACnC,OACE,sBAAKa,UAAU,gIAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,qBACEA,UAAU,0BACVoB,IAAKjC,EAAMkC,MACXC,IAAKnC,EAAM,iBAGf,sBAAKa,UAAU,0DAAf,UACE,oBAAIA,UAAU,oCAAd,SAAmDb,EAAMG,QACzD,mBAAGU,UAAU,4BAAb,SAA0Cb,EAAMoC,cCiEzCC,EA/Ec,SAACrC,GAC5B,OACE,mCACE,eAAC,EAAD,CAAUG,MAAM,8BAAhB,UACE,cAAC,EAAD,CACEA,MACE,0CACI,sBAAMU,UAAU,iCAAhB,uBAHR,SAOE,cAAC,EAAD,CACEV,MAAM,uBACNiC,KAAK,6GACLF,MAAM,sEACN,YAAU,oBAGd,cAAC,EAAD,CACE/B,MACE,0CACI,sBAAMU,UAAU,iCAAhB,uBAHR,SAOE,cAAC,EAAD,CACEV,MAAM,4CACNiC,KAAK,2EACLF,MAAM,sEACN,YAAU,mCAGd,cAAC,EAAD,CACE/B,MACE,2CACK,sBAAMU,UAAU,iCAAhB,uBAHT,SAOE,cAAC,EAAD,CACEV,MAAM,8CACNiC,KAAK,wFACLF,MAAM,sEACN,YAAU,oCAGd,cAAC,EAAD,CACE/B,MACE,2CACK,sBAAMU,UAAU,iCAAhB,uBAHT,SAOE,cAAC,EAAD,CACEV,MAAM,iCACNiC,KAAK,qFACLF,MAAM,sEACN,YAAU,iCAGd,cAAC,EAAD,CACE/B,MACE,2CACK,sBAAMU,UAAU,iCAAhB,uBAHT,SAOE,cAAC,EAAD,CACEV,MAAM,uCACNiC,KAAK,0FACLF,MAAM,sEACN,YAAU,sCChEPI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,EAAgBc,QAAQC,M","file":"static/js/main.9ac93411.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport interface Props {\r\n  title: React.ReactNode;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Tab: React.FC<Props> = (props) => {\r\n  return <>{props.children}</>;\r\n};\r\n\r\nexport default Tab;\r\n","import { Transition } from \"@headlessui/react\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport Tab from \"./Tab\";\r\n\r\ninterface Props {\r\n  title: React.ReactNode;\r\n  children: React.ReactElement[];\r\n}\r\n\r\nconst Carousel: React.FC<Props> = ({ title, children }) => {\r\n  children.forEach((c) => {\r\n    if (c.type !== Tab) {\r\n      throw new Error(\"Children of TabList should be Tab. Received \" + c.type);\r\n    }\r\n  });\r\n\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  const tabWidth = 100 / children.length;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"pt-12 bg-primary-100\">\r\n        <h2 className=\"px-4 pb-4 text-2xl font-semibold text-center md:text-3xl md:pb-12\">\r\n          {title}\r\n        </h2>\r\n        <div className=\"relative w-full pb-1 mx-auto max-w-54\">\r\n          <div className=\"flex items-center\">\r\n            {children.map((child, index) => (\r\n              <button\r\n                className=\"flex-1 px-2 py-4 text-xl font-semibold md:text-2xl\"\r\n                onClick={() => setSelectedIndex(index)}\r\n              >\r\n                {child.props.title}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div\r\n            className=\"absolute h-1 duration-700 ease-in-out transform bg-primary-300\"\r\n            style={{\r\n              width: tabWidth + \"%\",\r\n              left: tabWidth * selectedIndex + \"%\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      {/* Actual carousel */}\r\n      <div className=\"relative\">\r\n        {children.map((child, index) => (\r\n          <Transition\r\n            as={Fragment}\r\n            unmount={false}\r\n            show={index === selectedIndex}\r\n            enter=\"transition-opacity duration-700\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            entered=\"opacity-100\"\r\n            leave=\"transition-opacity duration-700\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <div>{child}</div>\r\n          </Transition>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  desc: string;\r\n  image: string;\r\n  \"image-alt\"?: string;\r\n}\r\n\r\nconst TabContent: React.FC<Props> = (props) => {\r\n  return (\r\n    <div className=\"absolute top-0 left-0 right-0 flex flex-col items-center justify-center pb-12 mx-auto shadow-inner bg-primary-200 md:flex-row\">\r\n      <div className=\"flex-shrink-0 py-8 md:py-0\">\r\n        <img\r\n          className=\"md:h-60 mb-star md:mb-0\"\r\n          src={props.image}\r\n          alt={props[\"image-alt\"]}\r\n        />\r\n      </div>\r\n      <div className=\"px-4 text-center max-w-37 -mt-star md:mt-0 md:text-left\">\r\n        <h3 className=\"text-xl font-semibold md:text-2xl\">{props.title}</h3>\r\n        <p className=\"pt-4 text-sm md:text-base\">{props.desc}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabContent;\r\n","import React from \"react\";\r\nimport Carousel from \"./components/Carousel\";\r\nimport Tab from \"./components/Tab\";\r\nimport TabContent from \"./components/TabContent\";\r\n\r\ninterface Props {}\r\n\r\nconst App: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <Carousel title=\"Get your favorites for free\">\r\n        <Tab\r\n          title={\r\n            <>\r\n              25<span className=\"text-sm text-gold md:text-base\">★</span>\r\n            </>\r\n          }\r\n        >\r\n          <TabContent\r\n            title=\"Customize your drink\"\r\n            desc=\"Make your drink just right with an extra espresso shot, dairy substitute or a dash of your favorite syrup.\"\r\n            image=\"https://www.starbucks.com/weblx/images/rewards/reward-tiers/025.png\"\r\n            image-alt=\"Coffee in cup\"\r\n          />\r\n        </Tab>\r\n        <Tab\r\n          title={\r\n            <>\r\n              50<span className=\"text-sm text-gold md:text-base\">★</span>\r\n            </>\r\n          }\r\n        >\r\n          <TabContent\r\n            title=\"Brewed hot coffee, bakery item or hot tea\"\r\n            desc=\"Pair coffee cake or an almond croissant with your fresh cup of hot brew.\"\r\n            image=\"https://www.starbucks.com/weblx/images/rewards/reward-tiers/050.png\"\r\n            image-alt=\"brewed Hot coffee and burger\"\r\n          />\r\n        </Tab>\r\n        <Tab\r\n          title={\r\n            <>\r\n              150<span className=\"text-sm text-gold md:text-base\">★</span>\r\n            </>\r\n          }\r\n        >\r\n          <TabContent\r\n            title=\"Handcrafted drink, hot breakfast or parfait\"\r\n            desc=\"Have a really good morning with a breakfast sandwich, oatmeal or your favorite drink.\"\r\n            image=\"https://www.starbucks.com/weblx/images/rewards/reward-tiers/150.png\"\r\n            image-alt=\"handcrafted drinks and burger\"\r\n          />\r\n        </Tab>\r\n        <Tab\r\n          title={\r\n            <>\r\n              200<span className=\"text-sm text-gold md:text-base\">★</span>\r\n            </>\r\n          }\r\n        >\r\n          <TabContent\r\n            title=\"Salad, sandwich or protein box\"\r\n            desc=\"Nourish your day with a hearty Chipotle Chicken Wrap or Eggs & Cheese Protein Box.\"\r\n            image=\"https://www.starbucks.com/weblx/images/rewards/reward-tiers/200.png\"\r\n            image-alt=\"salad, sandwich, eggs etc.\"\r\n          />\r\n        </Tab>\r\n        <Tab\r\n          title={\r\n            <>\r\n              400<span className=\"text-sm text-gold md:text-base\">★</span>\r\n            </>\r\n          }\r\n        >\r\n          <TabContent\r\n            title=\"Select merchandise or at-home coffee\"\r\n            desc=\"Take home a signature cup, a bag of coffee or your choice of select coffee accessories.\"\r\n            image=\"https://www.starbucks.com/weblx/images/rewards/reward-tiers/400.png\"\r\n            image-alt=\"coffee cup and coffee bag\"\r\n          />\r\n        </Tab>\r\n      </Carousel>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}